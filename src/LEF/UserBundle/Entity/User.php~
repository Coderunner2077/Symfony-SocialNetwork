<?php
// src/LEF/UserBundle/Entity/User.php

namespace LEF\UserBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use FOS\UserBundle\Model\User as BaseUser;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * User
 *
 * @ORM\Table(name="fos_user")
 * @ORM\Entity(repositoryClass="LEF\UserBundle\Repository\UserRepository")
 */
class User extends BaseUser {
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;
    
    /**
     * @ORM\Column(name="fullname", type="string", length=150, nullable=false)
     * @Assert\NotBlank()
     */
    protected $fullname;
    
    /**
     * @ORM\ManyToMany(targetEntity="LEF\UserBundle\Entity\User", cascade={"persist"})
     * @ORM\JoinTable(name="user_follower", 
     *                joinColumns={@ORM\JoinColumn(name="user_id", referencedColumnName="id")},
     *                inverseJoinColumns={@ORM\JoinColumn(name="follower_id", referencedColumnName="id")}
     * )       
     */
    protected $followers;
    
    /**
     * @ORM\ManyToMany(targetEntity="LEF\PostBundle\Entity\Post")
     * @ORM\JoinTable(name="user_post",
     *                joinColumns={@ORM\JoinColumn(name="user_id", referencedColumnName="id")},
     *                inverseJoinColumns={@ORM\JoinColumn(name="post_id", referencedColumnName="id")}
     * )
     */
    protected $posts;
    
    /**
     * @ORM\OneToOne(targetEntity="LEF\CoreBundle\Entity\Image", cascade={"persist"})
     */
    protected $avatar;
    
    /**
     * @ORM\Column(name="nb_followers", type="integer", nullable=true)
     */
    protected $nbFollowers;
    
    /**
     * Set fullname
     *
     * @param string $fullname
     *
     * @return User
     */
    public function setFullname($fullname)
    {
        $this->fullname = $fullname;

        return $this;
    }

    /**
     * Get fullname
     *
     * @return string
     */
    public function getFullname()
    {
        return $this->fullname;
    }

    /**
     * Add post
     *
     * @param \LEF\PostBundle\Entity\Post $post
     *
     * @return User
     */
    public function addPost(\LEF\PostBundle\Entity\Post $post)
    {
        $this->posts[] = $post;

        return $this;
    }

    /**
     * Remove post
     *
     * @param \LEF\PostBundle\Entity\Post $post
     */
    public function removePost(\LEF\PostBundle\Entity\Post $post)
    {
        $this->posts->removeElement($post);
    }

    /**
     * Get posts
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getPosts()
    {
        return $this->posts;
    }

    /**
     * Set avatar
     *
     * @param \LEF\CoreBundle\Entity\Image $avatar
     *
     * @return User
     */
    public function setAvatar(\LEF\CoreBundle\Entity\Image $avatar = null)
    {
        $this->avatar = $avatar;

        return $this;
    }

    /**
     * Get avatar
     *
     * @return \LEF\CoreBundle\Entity\Image
     */
    public function getAvatar()
    {
        return $this->avatar;
    }
    
    public function avatarSrc() {
        return $this->avatar ? $this->avatar->getSrc() : 'img/avatar.png';
    }

    /**
     * Add follower
     *
     * @param \LEF\UserBundle\Entity\User $follower
     *
     * @return User
     */
    public function addFollower(\LEF\UserBundle\Entity\User $follower)
    {
        $this->followers[] = $follower;
        
        return $this;
    }

    /**
     * Remove follower
     *
     * @param \LEF\UserBundle\Entity\User $follower
     */
    public function removeFollower(\LEF\UserBundle\Entity\User $follower)
    {
        $this->followers->removeElement($follower);
    }

    /**
     * Get followers
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getFollowers()
    {
        return $this->followers;
    }
    
    public function getAlias() {
        return '@' . strtolower($this->username);
    }
}
