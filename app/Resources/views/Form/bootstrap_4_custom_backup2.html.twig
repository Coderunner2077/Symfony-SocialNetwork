{# app/Resources/views/form/bootstrap_4_custom.html.twig #}
{% extends 'bootstrap_4_horizontal_layout.html.twig' %}

{% block submit_widget %}
	{% set type = type|default('submit') %}
	{% set attr = attr|merge({class: (attr.class|default('') ~ ' btn-primary')|trim}) %}
	{{ block('button_widget') }}
{% endblock submit_widget %}

{% block reset_widget %}
	{% set type = type|default('reset') %}
    {% set attr = attr|merge({class: (attr.class|default('') ~ ' btn-outline-secondary')|trim}) %}
    {{ block('button_widget') }}
{% endblock reset_widget %}


{% block checkbox_widget -%}
    {% set parent_label_class = 'checkbox-custom' %}
    {{ parent() }}
{%- endblock checkbox_widget %}

{% block radio_widget -%}
    {% set parent_label_class = 'radio-custom' %}
    {{ parent() }}
{%- endblock radio_widget %}

{% block checkbox_radio_label -%}
    {#- Do not display the label if widget is not defined in order to prevent double label rendering -#}
    {%- if widget is defined -%}
       
        {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' custom-control-label')|trim}) -%}
        {%- if not compound -%}
            {% set label_attr = label_attr|merge({'for': id}) %}
        {%- endif -%}
        {%- if required -%}
            {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' required')|trim}) -%}
        {%- endif -%}
        {%- if parent_label_class is defined -%}
            {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' ' ~ parent_label_class)|replace({'checkbox-inline': '', 'radio-inline': '', 'checkbox-custom': '', 'radio-custom': ''})|trim}) -%}
        {%- endif -%}
        {%- if label is not same as(false) and label is empty -%}
            {%- if label_format is not empty -%}
                {%- set label = label_format|replace({
                    '%name%': name,
                    '%id%': id,
                }) -%}
            {%- else -%}
                {%- set label = translation_domain is same as('form') ? name : name|humanize -%}
            {%- endif -%}
        {%- endif -%}

        {{ widget|raw }}
        <label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>
            {{- label is not same as(false) ? (translation_domain is same as(false) ? label : label|trans({}, translation_domain)) -}}
            {{- form_errors(form) -}}
        </label>
    {%- endif -%}
{%- endblock checkbox_radio_label %}

{% block choice_widget_collapsed -%}
    {%- set attr = attr|merge({class: (attr.class|default('') ~ ' custom-select')|trim}) -%}
    {{- parent() -}}
{%- endblock choice_widget_collapsed %}

{% block file_widget %}
	{% set type = type|default('file') %}
	{% set attr = attr|merge({class: (attr.class|default('') ~ ' custom-file-input')|trim}) %}
	<input type="{{ type }}" {{ block('widget_attributes') }} />
{% endblock file_widget %}

{% block file_label %}
	{% if label is not same as(false) -%}
		{%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' custom-file-label')|trim}) -%}
		{# {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' ' ~ block('form_label_class'))|trim}) -%} #}
        {% if not compound -%}
            {% set label_attr = label_attr|merge({'for': id}) %}
        {%- endif -%}
        {% if required -%}
            {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}
        {%- endif -%}
        {% if label is empty -%}
            {%- if label_format is not empty -%}
                {% set label = label_format|replace({
                    '%name%': name,
                    '%id%': id,
                }) %}
            {%- else -%}
                {% set label = 'form.choose.' ~ name %}
            {%- endif -%}
        {%- endif -%}
        <{{ element|default('label') }}{% if label_attr %}{% with { attr: label_attr } %}{{ block('attributes') }}{% endwith %}{% endif %}>{{ translation_domain is same as(false) ? label : label|trans({}, translation_domain) }}</{{ element|default('label') }}>
    {%- endif -%}
{% endblock file_label %}

{% block file_row %}
	<div class="form-group">
		<div class="custom-file{% if (not compound or force_error|default(false)) and not valid %} is-invalid{% endif %}">
            {{- block('file_widget') -}}
            {{- block('file_label') -}}
            {{- form_errors(form) -}}
        </div>
    </div>
{% endblock file_row %}

{%- block form_start -%}
	{% set attr = attr|merge({class: (attr.class|default('') ~ ' needs-validation')|trim}) %}
	{% set attr = attr|merge({novalidate: (attr.novalidate|default('novalidate'))|trim}) %}
	{{ parent() }}
{%- endblock form_start -%}

{% block textarea_image_label %}
    {%- if label is same as(false) -%}
        <div class="{{ block('form_label_class') }}"></div>
    {%- else -%}
        {%- if expanded is not defined or not expanded -%}
            {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' col-form-label')|trim}) -%}
        {%- endif -%}
        {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' col-3 ' ~ block('form_label_class'))|trim}) -%}
        {%- if compound is defined and compound -%}
            {%- set element = 'legend' -%}
            {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' col-form-legend')|trim}) -%}
        {%- else -%}
        	{% set label_attr = label_attr|merge({'for': id}) %}
            {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' form-control-label pt-0')|trim}) -%}
        {%- endif -%}
        {% if required -%}
            {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}
        {%- endif -%}
        {% if label is empty -%}
            {%- if label_format is not empty -%}
                {% set label = label_format|replace({
                    '%name%': name,
                    '%id%': id,
                }) %}
            {%- else -%}
                {% set label = translation_domain is same as('form') ? name : name|humanize %}
            {%- endif -%}
        {%- endif -%}
        {% set image_attr = image_attr|merge({alt: (translation_domain is same as(false) ? image_attr.alt|default(label) : image_attr.alt|default(label)|trans({}, translation_domain))|trim }) %}
        {% set image_attr = image_attr|merge({src: (asset(image_attr.src|default('')))|trim }) %}
        {% set image_attr = image_attr|merge({class: (image_attr.class|default('') ~ ' avatar-min rounded-circle')|trim }) %}
        {% set image_attr = image_attr|merge({'aria-label': translation_domain is same as(false) ? label : label|trans({}, translation_domain) }) %}
        <{{ element|default('label') }}{% if label_attr %}{% with { attr: label_attr } %}{{ block('attributes') }}{% endwith %}{% endif %}>
            <img {% if image_attr %}{% with { attr: image_attr } %}{{ block('attributes') }}{% endwith %}{% endif %}>
        </{{ element|default('label') }}>
    {% endif %}
{% endblock %}

{% block textarea_image_widget %}
	{{ block('textarea_widget') }}
{% endblock textarea_image_widget %}

{% block textarea_image_row %}
	<div class="form-group row{% if (not compound or force_error|default(false)) and not valid %} is-invalid{% endif %}">
        {{- form_label(form) -}}
        {%- set widget_attr = {} -%}
        {%- if help is not empty -%}
            {%- set widget_attr = {attr: {'aria-describedby': id ~"_help"}} -%}
        {%- endif -%}
        <div class="col-9 {{ block('form_group_class') }}">
            {{- form_widget(form, widget_attr) -}}
            {{- form_help(form) -}}
            {{- form_errors(form) -}}
        </div>
    </div>
{% endblock textarea_image_row %}

{% block lef_image_label %}
    {%- if label is same as(false) -%}
        <div class="{{ block('form_label_class') }}"></div>
    {%- else -%}
        {%- if expanded is not defined or not expanded -%}
            {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' col-form-label')|trim}) -%}
        {%- endif -%}       
        {% set label_attr = label_attr|merge({'for': id}) %}
        {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' cursor-pointer my-0')|trim}) -%}
        {% if required -%}
            {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}
        {%- endif -%}
        {% if label is empty -%}
            {%- if label_format is not empty -%}
                {% set label = label_format|replace({
                    '%name%': name,
                    '%id%': id,
                }) %}
            {%- else -%}
                {% set label = translation_domain is same as('form') ? name : name|humanize %}
            {%- endif -%}
        {%- endif -%}
        
        <{{ element|default('label') }}{% if label_attr %}{% with { attr: label_attr } %}{{ block('attributes') }}{% endwith %}{% endif %}>
            <img src="{{ asset(label_src) }}" alt="Upload Image Label" data-toggle="tooltip" title="{{ translation_domain is same as(false) ? label : label|trans({}, translation_domain) }}" data-placement="right" /> 
        </{{ element|default('label') }}>
    {% endif %}
{% endblock %}

{% block lef_image_widget %}
	{% set type = type|default('file') %}
	{% set attr = attr|merge({class: (attr.class|default('') ~ ' sr-only form-control-file')|trim}) %}
	{% if (not compound or force_error|default(false)) and not valid %}
		{% set attr = attr|merge({class: (attr.class|default('') ~ ' is-invalid')|trim}) %}
	{% endif %}
	{% set full_name = (full_name  ~ '[file]') %}
	<input type="{{ type }}" {{ block('widget_attributes') }} />
{% endblock lef_image_widget %}

{% block lef_image_row %}
	<div class="form-group row my-0 py-0 input-file-container">
		<div class="offset-3 col-9 offset-sm-2 col-sm-10 my-0 py-0">
			<div class="form-group py-0 my-0 {% if (not compound or force_error|default(false)) and not valid %} is-invalid{% endif %}">
				{{- block('lef_image_label') -}}
                {{- block('lef_image_widget') -}}
                {{- form_errors(form) -}}
			</div>
        </div>
    </div>
{% endblock lef_image_row %}

{% block custom_form_label %}
	{% if label is not same as(false) -%}
        {%- if compound is defined and compound -%}
            {%- set element = 'legend' -%}
            {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' col-form-label')|trim}) -%}
        {%- else -%}
            {%- set label_attr = label_attr|merge({for: id, class: (label_attr.class|default('') ~ ' form-control-label')|trim}) -%}
        {%- endif -%}
        {% if required -%}
            {% set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' required')|trim}) %}
        {%- endif -%}
        {% if label is empty -%}
            {%- if label_format is not empty -%}
                {% set label = label_format|replace({
                    '%name%': name,
                    '%id%': id,
                }) %}
            {%- else -%}
                {% set label = translation_domain is same as('form') ? name : name|humanize %}
            {%- endif -%}
        {%- endif -%}
        <{{ element|default('label') }}{% if label_attr %}{% with { attr: label_attr } %}{{ block('attributes') }}{% endwith %}{% endif %}>{{ translation_domain is same as(false) ? label : label|trans({}, translation_domain) }}</{{ element|default('label') }}>
    {%- endif -%}
{% endblock custom_form_label %}

{% block form_label -%}
    {%- if label is same as(false) -%}
        <div class="{{ block('form_label_class') }}"></div>
    {%- else -%}
        {%- if expanded is not defined or not expanded -%}
            {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' col-form-label')|trim}) -%}
        {%- endif -%}
        {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' ' ~ block('form_label_class'))|trim}) -%}
        {{- block('custom_form_label') -}}
    {%- endif -%}
{%- endblock form_label %}

{% block fieldset_form_row -%}
    <fieldset class="form-group">
        <div class="row{% if (not compound or force_error|default(false)) and not valid %} is-invalid{% endif %}">
            {{- form_label(form) -}}
            <div class="{{ block('form_group_class') }}">
                {{- form_widget(form) -}}
                {{- form_errors(form) -}}
            </div>
        </div>
{##}</fieldset>
{%- endblock fieldset_form_row %}

{% block form_row %}
	{%- if expanded is defined and expanded -%}
        {{ block('fieldset_form_row') }}
    {%- else -%}
    	{%- set widget_attr = {} -%}
        {%- if help is not empty -%}
            {%- set widget_attr = {attr: {'aria-describedby': id ~"_help"}} -%}
        {%- endif -%}
        <div class="form-group row{% if (not compound or force_error|default(false)) and not valid %} is-invalid{% endif %}">
            {{- form_label(form) -}}
            <div class="{{ block('form_group_class') }}">
                {{- form_widget(form, widget_attr) -}}
                {{- form_help(form) -}}
                {{- form_errors(form) -}}
            </div>
    {##}</div>
    {%- endif -%}
{% endblock form_row %}

{% block form_errors -%}
    {%- if errors|length > 0 -%}
    	{% if form is rootform %}
    		{%- for error in errors -%}
    		<div class="alert alert-danger form-alert alert-dismissible" role="alert">
                <h4 class="mb-0 d-block">
                    <span class="initialism form-error-icon badge badge-danger">{{ 'Error'|trans({}, 'validators') }}</span> <span class="form-error-message">{{ error.message|trans({}, 'validators') }}</span>
                </h4>
   				<button type="button" class="close" data-dismiss="alert">
   					<span aria-hidden="true">&times;</span>
   				</button>
   			</div>
   			{%- endfor -%}
   		{% else %}
        	<span class="invalid-feedback d-block">
                {%- for error in errors -%}
                <span class="mb-0 d-block">
                    <span class="initialism form-error-icon badge badge-danger">{{ 'Error'|trans({}, 'validators') }}</span> <span class="form-error-message">{{ error.message }}</span>
                </span>
                {%- endfor -%}
        	</span>
        {% endif %}
    {%- endif %}
{%- endblock form_errors %}

{% block form_help -%}
    {%- if help is not empty -%}
    	<div class="text-right" style="height: 0; margin-top: -7px; overflow: visible;{% if not valid %} margin-bottom: 10px;{% endif %}">
    		<small id="{{ id }}_help" class="form-text text-muted">
                {%- if translation_domain is same as(false) -%}
                    {{- help -}}
                {%- else -%}
                    {{- help|trans({}, 'form') -}}
                {%- endif -%}
        	</small>
    	</div>
    {%- endif -%}
{%- endblock form_help %}

{% block range_widget %}
	<div class="slidecontainer input-group d-flex align-items-center">
		{% set attr = attr|merge({class: (attr.class|default('form-control') ~ ' slider')|trim}) %}
		{{ parent() }}
		<div class="input-group-append">
			<span class="input-group-text slider-value" id="slider-value-{{ id }}">33 %</span>
		</div>
	</div>
{% endblock %}

{% block lef_user_username_widget %}
	<div class="input-group">
		<div class="input-group-prepend">
			<span class="input-group-text">@</span>
		</div>
		{% set attr = attr|merge({class: (attr.class|default('form-control'))|trim}) %}
		{{ form_widget(form) }}
	</div>
{% endblock %}

{% block lef_user_terms_label -%}
    {#- Do not display the label if widget is not defined in order to prevent double label rendering -#}
    {%- if widget is defined -%}
       
        {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' custom-control-label')|trim}) -%}
        {%- if not compound -%}
            {% set label_attr = label_attr|merge({'for': id}) %}
        {%- endif -%}
        {%- if required -%}
            {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' required')|trim}) -%}
        {%- endif -%}
        {%- if parent_label_class is defined -%}
            {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' ' ~ parent_label_class)|replace({'checkbox-inline': '', 'radio-inline': '', 'checkbox-custom': '', 'radio-custom': ''})|trim}) -%}
        {%- endif -%}
        {%- if label is not same as(false) and label is empty -%}
            {%- if label_format is not empty -%}
                {%- set label = label_format|replace({
                    '%name%': name,
                    '%id%': id,
                }) -%}
            {%- else -%}
                {%- set label = translation_domain is same as('form') ? name : name|humanize -%}
            {%- endif -%}
        {%- endif -%}

        {{ widget|raw }}
        <label{% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>
            {{- 'form.terms.first'|trans({}, translation_domain) -}}
            <a href="{{ path('lef_core_terms') }}" class="link">{{ 'form.terms.link'|trans({}, translation_domain) }}</a>
            {{ 'form.terms.and'|trans({}, translation_domain) }}
            <a href="{{ path('lef_core_policy') }}" class="link">{{ 'form.terms.policy'|trans({}, translation_domain) }}</a>.
            {{ 'form.terms.last'|trans({}, translation_domain) }}
        </label>
    {%- endif -%}
{%- endblock lef_user_terms_label %}

{% block lef_list_widget_options %}
	{% for group_label, choice in options %}
		{% if loop.index is same as(1) %}
			<option class="dropdown-toggle border-0" type="button" id="dropdownOptionButton" data-toggle="dropdown" value="{{ choice.value }}"{% if choice.attr %}{% with { attr: choice.attr } %}{{ block('attributes') }}{% endwith %}{% endif %}{% if choice is not selectedchoice(value) %} selected="selected"{% endif %} aria-haspopup="true" aria-expanded="false">
			    {{ choice_translation_domain is same as(false) ? choice.label : choice.label|trans({}, choice_translation_domain) }}
			</option>
		{% endif %}  
	{% endfor %}
	<div class="dropdown-menu" aria-labelledby="dropdownOptionButton">
	    {% for group_label, choice in options %}
		    {% if loop.index > 1 %}
				<option class="dropdown-item" value="{{ choice.value }}"{% if choice.attr %}{% with { attr: choice.attr } %}{{ block('attributes') }}{% endwith %}{% endif %}{% if choice is selectedchoice(value) %} selected="selected"{% endif %}>{{ choice_translation_domain is same as(false) ? choice.label : choice.label|trans({}, choice_translation_domain) }}</option>
			{% endif %}
		{% endfor %}
	</div>
{% endblock lef_list_widget_options %}

{% block lef_list_label -%}
    {# remove the checkbox-inline and radio-inline class, it's only useful for embed labels #}
    {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' sr-only')|trim}) -%}
    {{- block('form_label') -}}
{% endblock lef_list_label%}

{%- block lef_list_widget_collapsed -%}
    {%- if required and placeholder is none and not placeholder_in_choices and not multiple and (attr.size is not defined or attr.size <= 1) -%}
        {% set required = false %}
    {%- endif -%}
    {% set attr = attr|merge({class: (attr.class|default('') ~ ' dropdown')}) %}
    <select {{ block('widget_attributes') }}{% if multiple %} multiple="multiple"{% endif %}>
        {%- if placeholder is not none -%}
            <option value=""{% if required and value is empty %} selected="selected"{% endif %}>{{ placeholder != '' ? (translation_domain is same as(false) ? placeholder : placeholder|trans({}, translation_domain)) }}</option>
        {%- endif -%}
        {%- if preferred_choices|length > 0 -%}
            {% set options = preferred_choices %}
            {{- block('lef_list_widget_options') -}}
            {%- if choices|length > 0 and separator is not none -%}
                <option disabled="disabled">{{ separator }}</option>
            {%- endif -%}
        {%- endif -%}
        {%- set options = choices -%}
        {{- block('lef_list_widget_options') -}}
    </select>
{%- endblock lef_list_widget_collapsed -%}

{% block lef_list_widget %}
	{{ block('lef_list_widget_collapsed') }}
{% endblock lef_list_widget %}

